---

clusterID: myk8s-kube-rbac-proxy

ceemsExporter:
  eBPFProfiling:
    enabled: true

  kubeRBACProxy:
    enabled: true

ceemsAPIServer:
  kubeRBACProxy:
    enabled: true

  grafana:
    datasource:
      create: true
      scheme: https
      authHeader:
        name: Authorization
        value: "Bearer ${KUBE_RBAC_PROXY_token}"
      tls:
        skipVerify: true

  clusters:
    - id: myk8s-kube-rbac-proxy
      manager: k8s
      updaters:
        - myk8s-kube-rbac-proxy-tsdb

  updaters:
    - id: myk8s-kube-rbac-proxy-tsdb
      updater: tsdb
      web:
        url: https://{{ include "kube-ceems.kube-prometheus-stack.fullname" . }}-prometheus.{{ include "kube-ceems.api-server.namespace" . }}:10090
        authorization:
          type: Bearer
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
  rbac:
    extraClusterRoleRules:
      - apiGroups: [""]
        resources:
          - services/ceems-kube-ceems-prometheus
        verbs: ["get"]

ceemsLB:
  kubeRBACProxy:
    enabled: true

  grafana:
    datasource:
      create: true
      scheme: https
      authHeader:
        name: Authorization
        value: "Bearer ${KUBE_RBAC_PROXY_token}"
      tls:
        skipVerify: true

  config:
    strategy: round-robin
    backends:
      - id: myk8s-kube-rbac-proxy
        tsdb:
          - web:
              url: https://{{ include "kube-ceems.kube-prometheus-stack.fullname" . }}-prometheus.{{ include "kube-ceems.lb.namespace" . }}:10090
              authorization:
                type: Bearer
                credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              tls_config:
                insecure_skip_verify: true
        pyroscope:
          - web:
              url: http://{{ include "kube-ceems.pyroscope.fullname" . }}.{{ include "kube-ceems.namespace" . }}:4040

  rbac:
    extraClusterRoleRules:
      - apiGroups: [""]
        resources:
          - services/ceems-kube-ceems-prometheus
        verbs: ["get"]

kube-prometheus-stack:
  prometheus:
    service:
      port: 10090
      targetPort: 10090
    prometheusSpec:
      listenLocal: true
      externalUrl: https://{{ include "kube-ceems.kube-prometheus-stack.fullname" . }}-prometheus.{{ template "kube-prometheus-stack.namespace" . }}:10090
      volumes:
        - name: kube-rbac-proxy-config
          configMap:
            name: kube-ceems-prometheus-rbac-config
      containers:
        - name: kube-rbac-proxy
          args:
            - --secure-listen-address=:10090
            - --upstream=http://127.0.0.1:9090/
            - --proxy-endpoints-port=8888
            - --config-file=/etc/kube-rbac-proxy-config/config-file.yaml
          image: quay.io/brancz/kube-rbac-proxy:v0.19.1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 10090
            name: http
            protocol: TCP
          - containerPort: 8888
            name: http-healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8888
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: kube-rbac-proxy-config
            mountPath: /etc/kube-rbac-proxy-config

  extraManifests:
    - |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: kube-ceems-prometheus-rbac-config
        namespace: {{ include "kube-ceems.namespace" . }}
      data:
        config-file.yaml: |+
          authorization:
            resourceAttributes:
              namespace: {{ include "kube-ceems.namespace" . }}
              apiVersion: v1
              resource: services
              subresource: ceems-kube-ceems-prometheus
              name: ceems-kube-ceems-prometheus

  grafana:
    sidecar:
      datasources:
        defaultDatasourceEnabled: false
    additionalDataSources:
      - name: CEEMS-Prometheus
        type: prometheus
        url: https://{{ include "kube-ceems.kube-prometheus-stack.fullname" . }}-prometheus.{{ include "kube-prometheus-stack.namespace" . }}:10090
        access: proxy
        isDefault: false
        jsonData:
          tlsSkipVerify: true
          httpHeaderName1: Authorization
        secureJsonData:
          httpHeaderValue1: "Bearer ${KUBE_RBAC_PROXY_token}"
    rbac:
      extraClusterRoleRules:
        - apiGroups: [""]
          resources:
            - services/ceems-kube-ceems-api-server
            - services/ceems-kube-ceems-lb
            - services/ceems-kube-ceems-prometheus
          verbs: ["get"]
    envFromSecrets:
      - name: grafana-svc-token
        prefix: KUBE_RBAC_PROXY_
    extraObjects:
      - |
        apiVersion: v1
        kind: Secret
        type: kubernetes.io/service-account-token
        metadata:
          name: grafana-svc-token
          annotations:
            kubernetes.io/service-account.name: {{ include "grafana.serviceAccountName" . }}

pyroscopeServer:
  enabled: true
